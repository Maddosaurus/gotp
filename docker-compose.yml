version: '3.8'

services:
  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    image: pallas-server
    environment:
      - PALLAS_GRPC_SERVE_ENDPOINT=:${PALLAS_GRPC_PORT}
      - PALLAS_DB_SERVER=db
      - PALLAS_DB_PORT=5432
      - PALLAS_DB_NAME=pallas
      - PALLAS_DB_USER=${PALLAS_DB_USERNAME}
      - PALLAS_DB_PASS=${PALLAS_DB_PASSWORD}
    ports:
      - "50051:${PALLAS_GRPC_PORT}"
    depends_on:
      db:
        condition: service_healthy

  rest-api:
    build:
        context: .
        dockerfile: rest/Dockerfile
    image: pallas-rest
    environment:
      - PALLAS_REST_SERVE_ENDPOINT=:${PALLAS_REST_PORT}
      - PALLAS_GRPC_ENDPOINT=server:${PALLAS_GRPC_PORT}
    ports:
      - "8081:${PALLAS_REST_PORT}"
    depends_on:
      - server

  db:
    image: postgres:14
    environment:
      # FIXME: Currently, the user isn't customizable!
      - POSTGRES_USER=${PALLAS_DB_USERNAME}
      - POSTGRES_PASSWORD=${PALLAS_DB_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PALLAS_DB_USERNAME}"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - "./db/init.sql:/docker-entrypoint-initdb.d/init.sql"
      # - "./db/storage:/var/lib/postgresql/data"

  web:
    image: "node:17"
    environment:
      # - NODE_ENV=production
      - NODE_ENV=development
    working_dir: /app
    user: "1000:1000"
    ports:
      - "3000:3000"
    volumes:
      - "./ui:/app"
    command: "npm start"
